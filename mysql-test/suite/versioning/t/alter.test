create table t(
  a int
);
show create table t;
--error ER_VERS_WRONG_PARAMS
alter table t without system versioning;
--error ER_VERS_WRONG_PARAMS
alter table t with system versioning without system versioning;

alter table t with system versioning;
--echo # XXX test adding system versioning when
--echo # a table already has sys_trx_start column, say, INT or VARCHAR
show create table t;

alter table t without system versioning;
show create table t;

--error ER_VERS_FIELD_WRONG_TYPE
alter table t
  add column trx_start bigint(20) unsigned generated always as row start,
  add column trx_end bigint(20) unsigned generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;

--error ER_VERS_FIELD_WRONG_TYPE
alter table t
  add column trx_start timestamp generated always as row start,
  add column trx_end timestamp generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;

--error ER_PARSE_ERROR
alter table t
  add column trx_start timestamp(6) not null generated always as row start,
  add column trx_end timestamp(6) not null generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;

alter table t
  add column trx_start timestamp(6) generated always as row start,
  add column trx_end timestamp(6) generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;
show create table t;

alter table t without system versioning;
show create table t;

alter table t with system versioning;
show create table t;

alter table t add column b int;
show create table t;

alter table t add column c int;
show create table t;

alter table t add column d int first;
show create table t;

alter table t add column e int after d;
show create table t;

alter table t drop column a;
show create table t;

--error ER_VERS_WRONG_PARAMS
alter table t drop column sys_trx_start;
--error ER_VERS_WRONG_PARAMS
alter table t drop column sys_trx_end;

create or replace table t(
  a int
);
insert into t values(1);
alter table t with system versioning;
show create table t;
insert into t values(2);
select * from t for system_time all;
--echo # XXX hey, if SHOW CREATE TABLE shows sys_trx_start/sys_trx_end columns
--echo # why then SELECT * doesn't?
select * from t;

update t set a=3 where a=1;
select * from t;
select * from t for system_time all;
select sys_trx_start from t where a=3 into @tm;
alter table t add column b int;
select @tm=sys_trx_start from t where a=3;
--echo # XXX hmm. why sys_trx_start didn't change when a column was added?
show create table t;
select * from t;
select * from t for system_time all;

alter table t without system versioning;
select * from t;
show create table t;

--error ER_VERS_WRONG_PARAMS
alter table t modify a int with system versioning;
--error ER_VERS_WRONG_PARAMS
alter table t modify a int with system versioning with system versioning;
--error ER_VERS_WRONG_PARAMS
alter table t modify a int with system versioning without system versioning;

alter table t with system versioning;

alter table t modify a int without system versioning;
show create table t;

alter table t modify a int with system versioning;
show create table t;

-- source suite/versioning/common.inc
create or replace table t(
  a int
) engine=innodb;

insert into t values(1);
select * from t;

--error ER_VERS_FIELD_WRONG_TYPE
alter table t
  add column trx_start timestamp(6) generated always as row start,
  add column trx_end timestamp(6) generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;
--echo # XXX iirc, specs said that standard timestamp(6) must works. But if a
--echo # user wants to get access to raw transaction ids, he can create these
--echo # columns as bigint or some other storage engine specific type

alter table t
  add column trx_start bigint(20) unsigned generated always as row start,
  add column trx_end bigint(20) unsigned generated always as row end,
  add period for system_time(trx_start, trx_end),
  with system versioning;
show create table t;
alter table t without system versioning;

alter table t with system versioning, algorithm=copy;
--echo # XXX what's the difference?
show create table t;

update t set a=2;
select * from t;
select * from t for system_time all;

alter table t add column b int, algorithm=copy;
show create table t;
select * from t;
--echo # XXX WHAAAT???

alter table t drop column b, algorithm=copy;
show create table t;
select * from t for system_time all;

alter table t add column b int, algorithm=inplace;
show create table t;
select * from t;

alter table t drop column b, algorithm=inplace;
show create table t;
select * from t for system_time all;

alter table t without system versioning, algorithm=copy;
show create table t;

create or replace table t (a int) with system versioning engine=innodb;
insert into t values (1), (2), (3);
delete from t where a<3;
alter table t add b int auto_increment unique;
select * from t for system_time all;
--echo # XXX very weird. why?
insert into t values (4, NULL);
select * from t for system_time all;

create or replace table t (a int) with system versioning;
insert into t values (1), (2), (3);
delete from t where a<3;
alter table t add b int auto_increment unique;
select * from t for system_time all;
insert into t values (4, NULL);
select * from t for system_time all;

create or replace table t (a int) with system versioning engine=innodb;
insert into t values (1), (2), (3);
delete from t where a<3;
alter table t add b tinyint auto_increment unique;
select * from t for system_time all;
insert into t values (4, NULL);
select * from t for system_time all;

create or replace table t (a int) with system versioning;
insert into t values (1), (2), (3);
delete from t where a<3;
alter table t add b tinyint auto_increment unique;
select * from t for system_time all;
insert into t values (4, NULL);
select * from t for system_time all;

create or replace table t (a int) engine innodb;
insert into t values (1);
alter table t with system versioning, algorithm=inplace;
select * from t for system_time all;
update t set a=2;
select * from t for system_time all;
alter table t add column b int, algorithm=inplace;
select * from t for system_time all;
alter table t without system versioning, algorithm=inplace;
select * from t;

call verify_vtq;
drop table t;

-- source suite/versioning/common_finish.inc
