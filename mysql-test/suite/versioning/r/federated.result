install soname 'ha_federatedx';
call create_table('t1', 'x int');
create or replace table tf engine=FEDERATED connection='mysql://root@127.0.0.1:MASTER_MYPORT/test/t1';
# INSERT
insert into t1 values (1);
select * from tf;
x
1
insert into tf (x) values (2);
select * from t1;
x
1
2
select * from tf;
x
1
2
# UPDATE
update tf set x= x + 2;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
1	HISTORICAL ROW
2	HISTORICAL ROW
3	CURRENT ROW
4	CURRENT ROW
# DELETE
delete from tf;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
1	HISTORICAL ROW
2	HISTORICAL ROW
3	HISTORICAL ROW
4	HISTORICAL ROW
select * from tf;
x
# TRUNCATE
truncate tf;
select * from t1 for system_time all;
x
# REPLACE
call create_table_key('t2', 'y int');
create or replace table t2f engine=FEDERATED connection='mysql://root@127.0.0.1:MASTER_MYPORT/test/t2';
insert t2f (id, y) values (1, 2);
replace t2f (id, y) values (1, 3);
select *, check_row(row_start, row_end) from t2 for system_time all
order by y;
id	y	check_row(row_start, row_end)
1	2	HISTORICAL ROW
1	3	CURRENT ROW
# VIEW
create or replace view vt1 as select * from tf;
insert into vt1 values (3);
update vt1 set x= x + 1;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
3	HISTORICAL ROW
4	CURRENT ROW
delete from vt1;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
3	HISTORICAL ROW
4	HISTORICAL ROW
# multi-UPDATE
truncate t1;
truncate t2;
insert into t1 values (1);
insert into t2 values (2, 2);
update tf, t2f set tf.x= 11, t2f.y= 22;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
1	HISTORICAL ROW
11	CURRENT ROW
select *, check_row(row_start, row_end) from t2 for system_time all
order by y;
id	y	check_row(row_start, row_end)
2	2	HISTORICAL ROW
2	22	CURRENT ROW
# Partitioned
create or replace table t1 (x int)
with system versioning
partition by system_time limit 3 (
partition p0 history,
partition p1 history,
partition pn current);
insert into tf (x) values (1), (2), (3), (4);
update tf set x= x + 10;
select *, check_row(row_start, row_end) from t1 for system_time all
order by x;
x	check_row(row_start, row_end)
1	HISTORICAL ROW
2	HISTORICAL ROW
3	HISTORICAL ROW
4	HISTORICAL ROW
11	CURRENT ROW
12	CURRENT ROW
13	CURRENT ROW
14	CURRENT ROW
delete from tf;
select *, check_row(row_start, row_end) from t1 partition (p0)
order by x;
x	check_row(row_start, row_end)
1	HISTORICAL ROW
2	HISTORICAL ROW
3	HISTORICAL ROW
4	HISTORICAL ROW
select *, check_row(row_start, row_end) from t1 partition (p1)
order by x;
x	check_row(row_start, row_end)
11	HISTORICAL ROW
12	HISTORICAL ROW
13	HISTORICAL ROW
14	HISTORICAL ROW
drop database test;
create database test;
uninstall soname 'ha_federatedx';
